name: 'Integration'

on:
  pull_request: [ production, development ]
  push:
    branches: [ production, development ]

jobs:
  setup:
    name: Setup node and environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rush Install
        uses: advancedcsg-open/actions-rush@v1.4.5

      - name: Cache node modules
        id: cacheTsNodeDev
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: /usr/local/lib/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Global ts-node-dev
        if: steps.cacheTsNodeDev.outputs.cache-hit != 'true'
        run: npm install -g ts-node-dev

  audit:
    name: Audit for vulnerabilities
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Rush Install
        uses: advancedcsg-open/actions-rush@v1.4.5

      - name: Rush CLI
        if: steps.cacheNode.outputs.cache-hit != 'true'
        run: npm install -g @microsoft/rush
          
      - run: rush audit

  lint:
    name: Lint code for standarlization
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Rush Install
        uses: advancedcsg-open/actions-rush@v1.4.5

      - name: Rush CLI
        if: steps.cacheNode.outputs.cache-hit != 'true'
        run: npm install -g @microsoft/rush
          
      - run: rush lint --fix

  analyze:
    name: Analyze code for vulnerabilities
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: 'javascript'

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1


  build:
    name: Build all packages
    needs: [audit, lint, analyze]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Rush Install
        uses: advancedcsg-open/actions-rush@v1.4.5
        with:
          build: true

  test_1:
    name: Test general packages
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Rush Install
        uses: advancedcsg-open/actions-rush@v1.4.5
        with:
          build: true

      - name: Rush CLI
        if: steps.cacheNode.outputs.cache-hit != 'true'
        run: npm install -g @microsoft/rush

      - name: Global ts-node-dev
        if: steps.cacheNode.outputs.cache-hit != 'true'
        run: npm install -g ts-node-dev
          
      - run: rush test

  test_2:
    name: Test database packages
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Rush Install
        uses: advancedcsg-open/actions-rush@v1.4.5
        with:
          build: true

      - name: Rush CLI
        if: steps.cacheNode.outputs.cache-hit != 'true'
        run: npm install -g @microsoft/rush

      - name: Global ts-node-dev
        if: steps.cacheNode.outputs.cache-hit != 'true'
        run: npm install -g ts-node-dev
          
      - run: echo 'implement database tests'

  publish:
    name: Publish release packages
    needs: [test_1, test_2]
    runs-on: ubuntu-latest
    if: ${{ github.event.release.body != '' && success() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Rush Install
        uses: advancedcsg-open/actions-rush@v1.4.5

      - name: Rush CLI
        if: steps.cacheNode.outputs.cache-hit != 'true'
        run: npm install -g @microsoft/rush
          
      - name: Publish packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          RELEASE: ${{ github.event.release.body }}
        run: rush bump
