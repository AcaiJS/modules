name: '@acai build'

on:
  pull_request:
  push:
    branches: [ production, development ]
  release:
    types: [ published ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache Rush
        uses: actions/cache@v2
        with:
          path: |
            common/temp/install-run
            ~/.rush
          key: ${{ runner.os }}-${{ hashFiles('rush.json') }}

      - name: Cache pnpm
        uses: actions/cache@v2
        with:
          path: |
            common/temp/pnpm-store
            ~/.cache/Cypress
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: https://registry.npmjs.org/

      - name: Rush CLI
        run: npm install -g @microsoft/rush

      - name: Global ts-node-dev
        run: npm install -g ts-node-dev

      - name: Rush Install
        uses: advancedcsg-open/actions-rush@v1.4.5

  audit:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - run: rush audit

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - run: rush lint

  build:
    needs: [lint, audit]
    runs-on: ubuntu-latest
    steps:
      - run: rush build

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: rush test
      
  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Publish packages
        if: ${{ github.event.release.body != '' && success() }}
        uses: ./.github/workflows/delivery@master
        with:
          body: "${{ github.event.release.body }}"
          token: "${{ secrets.NPM_TOKEN }}"
